@page
@model GameModel
@{
    ViewData["Title"] = "Scrabble Game";
}
@section Scripts {
    <script>
        const teamNumber = @Model.Team;
        const timestamp = @Model.Timestamp;
        const gameJson = @Html.Raw(Model.GameJson?.ToString() ?? "null");
        const players = @Html.Raw(Model.Players?.ToString() ?? "null");
        const userName = "@Model.UserName";

        requirejs.config({
            baseUrl: "../js/",
            paths: {
                jquery: "../lib/jquery/dist/jquery",
                "jquery-ui": "../lib/jquery-ui",
                underscore: "../lib/underscore",
                knockout: "../lib/knockout",
                signalR: "../lib/signalr/dist/browser/signalr",
            },
        });

        requirejs(["init"]);
    </script>
}
<div class="scores">
    <!-- ko if: scores.isGameOver -->
    <em>(GAME OVER)</em>
    &nbsp;
    <!-- /ko -->
    <!-- ko foreach: scores.scores -->
    <span data-bind="
        text: $data,
        css: { 
            'team-yours': ($index() + 1) == $parent.teamNumber,
            'team-turn': ($index() + 1) == $parent.teamTurn()
        }"></span>
    &nbsp;
    <!-- /ko -->
</div>
<div class="view-selection btn-group" 
    data-bind="foreach: { data: mainViewOptions, as: 'option' }">
    <label class="btn btn-outline-info"
        data-bind="css: { 'active': $parent.mainView() === option }">
        <input type="radio" 
            name="view" 
            data-bind="checked: $parent.mainView, checkedValue: option"
        />
        <!-- ko text: option --><!-- /ko -->
    </label>
</div>
<br />

<div class="main-view">
    <!--
        Using 'visible' binding so that if tiles were placed from the
        rack onto the board they don't get removed from DOM upon
        switching views.
    -->
    <div class="board" data-bind="visible: mainView() === 'board'">
        <!-- ko foreach: { data: board.board, as: 'row' } -->
        <!-- ko foreach: row -->
            <div class="square" 
                data-bind="
                text: blankLetter || letter,
                css: multiplierType ? multiplierType + multiplier : '',
                "></div>
        <!-- /ko -->
        <!-- /ko -->
    </div>

    <!-- ko if: mainView() === "moves" -->
    <ol class="moves" data-bind="foreach: moves.moves">
        <li data-bind="text: $data"></li>
    </ol>
    <!-- /ko -->

    <!-- ko if: mainView() === "bag" -->
    <ol class="bag" data-bind="foreach: bag.remaining()">
        <li class="bag-row">
            <!-- ko foreach: _.times($data[1],function(){return $data[0]}) -->
                <div class="letter" data-bind="text: $data"></div>
            <!-- /ko -->
        </li>
    </ol>
    <!-- /ko -->

    <!-- ko if: mainView() === "teams" -->
    <div class="teams">
        <p>
            Invite other players using this link: 
            <input type="text" 
                class="form-control-sm" 
                data-bind="textinput: location.toString()" />
        </p>
        <ul data-bind="foreach: teams.teams">
            <li>
                Team <!-- ko text: $data --><!-- /ko -->:
                <span data-bind="text: _.pluck($parent.teams.playersByTeam[$data],'userName').join(', ')"></span>
            </li>
        </ul>
    </div>
    <!-- /ko -->

    <!-- ko if: mainView() === "help" -->
    <div class="help" data-bind="with: help">
        <h3>Letter Values</h3>
        <p data-bind="foreach: letterValues">
            <code data-bind="text: $data[0] + ':' + $data[1]"></code>&nbsp;
        </p>
        <h3>Two Letter Words</h3>
        <p data-bind="foreach: twoLetterWords">
            <code data-bind="text: $data"></code>
        </p>
        <h3>Q Without U</h3>
        <p data-bind="foreach: qWithoutU">
            <code data-bind="text: $data"></code>
        </p>
    </div>
    <!-- /ko -->

    <!-- ko if: mainView() === "options" -->
    <div class="options" data-bind="with: options">
        <button class="btn btn-danger"
            data-bind="click: onDeleteClick">Delete Game</button>
        <button class="btn btn-warning"
            data-bind="click: onLeaveClick">Leave Game</button>
        <button class="btn btn-outline-danger"
            data-bind="click: onUndoClick">Undo</button>
        <button class="btn btn-outline-danger"
            data-bind="click: onRedoClick">Redo</button>
    </div>
    <!-- /ko -->
</div>

<div class="rack" data-bind="foreach: { data: rack.rack, as: 'letter' }">
    <div class="letter" 
        draggable="true" 
        ondragstart="event.dataTransfer.setData('text/plain',null)"
        data-bind="text: letter"></div>
</div>
<br />
<div class"buttons" data-bind="with: buttons">
    <!-- ko if: canGo -->
    <button class="btn btn-primary"
        data-bind="click: onPlayClick">Play</button>
    <button class="btn"
        data-bind="
        class: canDraw() ? 'btn-success' : 'btn-light',
        click: onDrawClick">Draw</button>
    <button class="btn btn-light"
        data-bind="click: onSwapClick">Swap</button>
    <button class="btn btn-light"
        data-bind="click: onSkipClick">Skip</button>
    <!-- /ko -->

    <!-- ko ifnot: canGo -->
    <button class="btn btn-light"
        disabled="disabled">Play</button>
    <button class="btn btn-light"
        disabled="disabled">Draw</button>
    <button class="btn btn-light"
        disabled="disabled">Swap</button>
    <button class="btn btn-light"
        disabled="disabled">Skip</button>
    <!-- /ko -->

    <button class="btn btn-light"
        data-bind="click: onRecallClick">Recall</button>
    <button class="btn btn-light"
        data-bind="click: onShuffleClick">Shuffle</button>
</div>
