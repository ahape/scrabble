@page
@model GameModel
@{
    ViewData["Title"] = "Scrabble Game";
}
@section Scripts {
    <script>
        const timestamp = JSON.parse('@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Version))');
        const gameJson = @Html.Raw(Model.GameJson?.ToString() ?? "null");
        const players = @Html.Raw(Model.Players?.ToString() ?? "null");
        const player = @Html.Raw(Model.Player?.ToString() ?? "null");

        require(["knockout", "pages/game/index"], function (ko, page) {
            ko.applyBindings(
                new page.Index(gameJson, players, player, timestamp));
        });
    </script>
}

<scores params="game: game, teamNumber: teamNumber">Loading...</scores>

<view-selection class="view-selection text-center" 
    params="mainView: mainView, game: game"></view-selection>

<div class="main-view">
    <!--
        Using 'visible' binding so that if tiles were placed from the
        rack onto the board they don't get removed from DOM upon
        switching views.
    -->
    <board params="game: game" 
        data-bind="visible: mainView() === 'board'"></board>

    <!-- ko if: mainView() === "moves" -->
    <moves params="game: game, teamNumber: teamNumber"></moves>
    <!-- /ko -->

    <!-- ko if: mainView() === "bag" -->
    <bag params="game: game"></bag>
    <!-- /ko -->

    <!-- ko if: mainView() === "teams" -->
    <teams params="teams: game.teams, players: players"></teams>
    <!-- /ko -->

    <!-- ko if: mainView() === "help" -->
    <help></help>
    <!-- /ko -->

    <!-- ko if: mainView() === "options" -->
    <options params="
        game: game, 
        playerId: player.id,
        onClick: onClick"></options>
    <!-- /ko -->
</div>

<rack params="rack: rackLetters"></rack>

<br />

<buttons params="
    game: game, 
    rack: rackLetters, 
    onClick: onClick, 
    teamNumber: teamNumber"></buttons>
